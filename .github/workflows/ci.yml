name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run ruff linting
      run: uv run ruff check .
    
    - name: Run ruff formatting check
      run: uv run ruff format --check .
    
    - name: Run mypy type checking
      run: uv run mypy .

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Create test database
      run: |
        mkdir -p data
        sqlite3 data/articles.db << 'EOF'
        CREATE TABLE articles (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT,
            link TEXT UNIQUE,
            published TEXT,
            summary TEXT,
            embedded INTEGER DEFAULT 0,
            detected_language TEXT DEFAULT 'unknown',
            original_summary TEXT,
            is_translated INTEGER DEFAULT 0
        );
        INSERT INTO articles (title, link, published, summary) VALUES 
        ('Test Article 1', 'https://example.com/1', '2025-06-15T10:00:00+09:00', 'Test summary 1'),
        ('Test Article 2', 'https://example.com/2', '2025-06-15T11:00:00+09:00', 'Test summary 2'),
        ('Test Article 3', 'https://example.com/3', '2025-06-15T12:00:00+09:00', 'Test summary 3');
        EOF
    
    - name: Run database migration
      run: uv run python db_migration.py
    
    - name: Install test dependencies
      run: uv sync --group test
    
    - name: Run test suite
      run: uv run pytest --cov=. --cov-report=term-missing --cov-fail-under=50
    
    - name: Run legacy read system tests
      run: uv run python test_read_system.py